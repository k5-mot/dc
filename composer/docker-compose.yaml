
version: '3'

services:

  # https://doc.traefik.io/traefik/user-guides/docker-compose/basic-example/
  traefik:
    image: "traefik:v2.11.0"
    container_name: "traefik"
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
    labels:
      - traefik.enable=true
    ports:
      - "80:80"
      - "443:443"
      - "2222:2222"
      - "8080:8080" # traefik Web UI
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - common
      - default

  # https://doc.traefik.io/traefik/user-guides/docker-compose/basic-example/
  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    networks:
      - common
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=HostRegexp(`whoami.{ip:.*}.traefik.me`)"

  # https://github.com/realtarget/traefik2-docker-stack/blob/master/gitlab/docker-compose.yml
  # https://doc.traefik.io/traefik/user-guides/docker-compose/basic-example/
  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    container_name: gitlab
    restart: always
    networks:
      - common
      - default
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.192.168.11.4.traefik.me'
        # external_url "HostRegexp(`gitlab.{ip:.*}.traefik.me`)"
        # Add any other gitlab.rb configuration here, each on its own line
      GITLAB_HOME: "/home/docker/gitlab"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab.entrypoints=http"
      - "traefik.http.routers.gitlab.rule=HostRegexp(`gitlab.{ip:.*}.traefik.me`)"
      - "traefik.http.routers.gitlab.service=gitlab"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      # - "traefik.tcp.routers.gitlab-ssh.rule=HostSNI(`*`)"
      # - "traefik.tcp.routers.gitlab-ssh.entrypoints=ssh"
      # - "traefik.tcp.routers.gitlab-ssh.service=gitlab-ssh-svc"
      # - "traefik.tcp.services.gitlab-ssh-svc.loadbalancer.server.port=2222"
    volumes:
      - vol_gitlab_config:/etc/gitlab
      - vol_gitlab_logs:/var/log/gitlab
      - vol_gitlab_data:/var/opt/gitlab

  # https://community.traefik.io/t/traefik-rules-for-2nd-unsecured-domain/13697
  redmine:
    container_name: redmine
    image: redmine:5.1.2-bookworm
    restart: always
    networks:
      - common
      - default
    environment:
      REDMINE_DB_POSTGRES: redmine-db
      REDMINE_DB_DATABASE: redmine
      REDMINE_DB_USERNAME: redmine_user
      REDMINE_DB_PASSWORD: redmine_password
      REDMINE_SECRET_KEY_BASE: supersecretkey
      REDMINE_DB_PORT: 5432
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redmine.entrypoints=http"
      - "traefik.http.routers.redmine.rule=HostRegexp(`redmine.{ip:.*}.traefik.me`)"
      - "traefik.http.routers.redmine.service=redmine"
      - "traefik.http.services.redmine.loadbalancer.server.port=3000"
    volumes:
      - vol_redmine:/usr/src/redmine/files

  redmine-db:
    container_name: redmine_db
    image: postgres:16.2-bookworm
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: redmine
      POSTGRES_USER: redmine_user
      POSTGRES_PASSWORD: redmine_password
    volumes:
      - vol_redmine_db:/var/lib/postgresql/data

  # https://github.com/mattermost/focalboard/blob/main/docker/docker-compose.yml
  focalboard:
    image: mattermost/focalboard:7.11.4
    container_name: focalboard
    networks:
      - common
      - default
    volumes:
      - vol_focalboard_data:/opt/focalboard/data
    # ports:
    #   - 80:8000
    environment:
      - VIRTUAL_HOST=focalboard.192.168.11.4.traefik.me
      - VIRTUAL_PORT=8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.focalboard.entrypoints=http"
      - "traefik.http.routers.focalboard.rule=HostRegexp(`focalboard.{ip:.*}.traefik.me`)"
      - "traefik.http.routers.focalboard.service=focalboard"
      - "traefik.http.services.focalboard.loadbalancer.server.port=8000"

  # https://github.com/support-project/docker-knowledge?tab=readme-ov-file
  knowledge:
    image: koda/docker-knowledge
    container_name: knowledge
    networks:
      - common
      - default
    volumes:
      - ./volumes/knowledge:/root/.knowledge
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - "knowledge-db"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.knowledge.entrypoints=http"
      - "traefik.http.routers.knowledge.rule=HostRegexp(`knowledge.{ip:.*}.traefik.me`)"
      - "traefik.http.routers.knowledge.service=knowledge"
      - "traefik.http.services.knowledge.loadbalancer.server.port=8080"


  knowledge-db:
    image: postgres:9
    container_name: knowledge_db
    restart: always
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=knowledge_production
    volumes:
      #- ./volumes/initdb:/docker-entrypoint-initdb.d
      - ./volumes/postgres/data:/var/lib/postgresql/data

networks:
  common:
    driver: bridge

volumes:
  vol_gitlab_config:
  vol_gitlab_logs:
  vol_gitlab_data:
  vol_redmine:
  vol_redmine_db:
  vol_outline_db_data:
  vol_outline_redis_data:
  vol_focalboard_data:
